package net.webservicex;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * Get UK Postcode,Town,County and Validate UK Address
 *
 * This class was generated by Apache CXF 3.2.2
 * 2018-03-05T19:45:59.172Z
 * Generated source version: 3.2.2
 *
 */
@WebServiceClient(name = "UKLocation",
                  wsdlLocation = "file:/C:/Code/SoapWebServiceClient/src/main/resources/locationService.wsdl",
                  targetNamespace = "http://www.webserviceX.NET")
public class UKLocation extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.webserviceX.NET", "UKLocation");
    public final static QName UKLocationHttpGet = new QName("http://www.webserviceX.NET", "UKLocationHttpGet");
    public final static QName UKLocationHttpPost = new QName("http://www.webserviceX.NET", "UKLocationHttpPost");
    public final static QName UKLocationSoap12 = new QName("http://www.webserviceX.NET", "UKLocationSoap12");
    public final static QName UKLocationSoap = new QName("http://www.webserviceX.NET", "UKLocationSoap");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Code/SoapWebServiceClient/src/main/resources/locationService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(UKLocation.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Code/SoapWebServiceClient/src/main/resources/locationService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public UKLocation(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public UKLocation(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UKLocation() {
        super(WSDL_LOCATION, SERVICE);
    }

    public UKLocation(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public UKLocation(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public UKLocation(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns UKLocationHttpGet
     */
    @WebEndpoint(name = "UKLocationHttpGet")
    public UKLocationHttpGet getUKLocationHttpGet() {
        return super.getPort(UKLocationHttpGet, UKLocationHttpGet.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UKLocationHttpGet
     */
    @WebEndpoint(name = "UKLocationHttpGet")
    public UKLocationHttpGet getUKLocationHttpGet(WebServiceFeature... features) {
        return super.getPort(UKLocationHttpGet, UKLocationHttpGet.class, features);
    }


    /**
     *
     * @return
     *     returns UKLocationHttpPost
     */
    @WebEndpoint(name = "UKLocationHttpPost")
    public UKLocationHttpPost getUKLocationHttpPost() {
        return super.getPort(UKLocationHttpPost, UKLocationHttpPost.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UKLocationHttpPost
     */
    @WebEndpoint(name = "UKLocationHttpPost")
    public UKLocationHttpPost getUKLocationHttpPost(WebServiceFeature... features) {
        return super.getPort(UKLocationHttpPost, UKLocationHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns UKLocationSoap
     */
    @WebEndpoint(name = "UKLocationSoap12")
    public UKLocationSoap getUKLocationSoap12() {
        return super.getPort(UKLocationSoap12, UKLocationSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UKLocationSoap
     */
    @WebEndpoint(name = "UKLocationSoap12")
    public UKLocationSoap getUKLocationSoap12(WebServiceFeature... features) {
        return super.getPort(UKLocationSoap12, UKLocationSoap.class, features);
    }


    /**
     *
     * @return
     *     returns UKLocationSoap
     */
    @WebEndpoint(name = "UKLocationSoap")
    public UKLocationSoap getUKLocationSoap() {
        return super.getPort(UKLocationSoap, UKLocationSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UKLocationSoap
     */
    @WebEndpoint(name = "UKLocationSoap")
    public UKLocationSoap getUKLocationSoap(WebServiceFeature... features) {
        return super.getPort(UKLocationSoap, UKLocationSoap.class, features);
    }

}
